ðŸŽ¯ Final Goal
âœ… Use Ansible to automatically install:
Node Exporter (to collect system metrics)
Prometheus (to collect data from Node Exporter)
Grafana (to visualize the metrics)
All this will happen on your single local WSL machine (localhost).

ðŸ§± Step-by-Step Guide (With Commands & Explanation)
âœ… STEP 1: Install Ansible on WSL
Run this in your Ubuntu terminal:

sudo apt update
sudo apt install -y ansible
ðŸ‘‰ Why? Ansible is the tool you'll use to automate all the installations.

âœ… STEP 2: Create a Folder for Your Project

mkdir ~/monitoring-setup
cd ~/monitoring-setup
ðŸ‘‰ This is where all your Ansible files will live.

âœ… STEP 3: Create the Inventory File
Create a file named inventory.ini:


vi inventory.ini
Paste this:

localhost ansible_connection=local
ðŸ‘‰ Why? Youâ€™re telling Ansible: "Run all tasks on this same machine (localhost)."


âœ… STEP 4: Create the Ansible Playbook
Create a file named setup_monitoring.yml:

vi setup_monitoring.yml
Paste this simple version of the playbook (clear and tested):

- name: Install Prometheus, Node Exporter, Grafana
  hosts: localhost
  become: yes
  tasks:

    - name: Install required packages
      apt:
        name:
          - wget
          - curl
          - software-properties-common
        update_cache: yes

    - name: Install Node Exporter
      shell: |
        wget https://github.com/prometheus/node_exporter/releases/latest/download/node_exporter-1.8.1.linux-amd64.tar.gz
        tar -xzf node_exporter-1.8.1.linux-amd64.tar.gz
        sudo mv node_exporter-1.8.1.linux-amd64/node_exporter /usr/local/bin/
        nohup node_exporter &
      args:
        executable: /bin/bash

    - name: Install Prometheus
      shell: |
        wget https://github.com/prometheus/prometheus/releases/download/v2.52.0/prometheus-2.52.0.linux-amd64.tar.gz
        tar -xzf prometheus-2.52.0.linux-amd64.tar.gz
        cd prometheus-2.52.0.linux-amd64
        cat <<EOF > prometheus.yml
        global:
          scrape_interval: 15s
        scrape_configs:
          - job_name: 'node_exporter'
            static_configs:
              - targets: ['localhost:9100']
        EOF
        nohup ./prometheus --config.file=prometheus.yml &
      args:
        executable: /bin/bash

    - name: Install Grafana
      shell: |
        sudo apt install -y apt-transport-https
        wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
        echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee /etc/apt/sources.list.d/grafana.list
        sudo apt update
        sudo apt install -y grafana
        sudo systemctl start grafana-server
        sudo systemctl enable grafana-server
      args:
        executable: /bin/bash
ðŸ‘‰ This playbook installs and starts all 3 components on your WSL machine.

âœ… STEP 5: Run the Ansible Playbook
In the same folder:


ansible-playbook -i inventory.ini setup_monitoring.yml
ðŸ‘‰ This command tells Ansible:
"Use inventory.ini and run the tasks in setup_monitoring.yml."

âœ… STEP 6: Access the Web Interfaces
Once playbook is done:

Grafana â†’ http://localhost:3000

Login: admin / admin

Prometheus â†’ http://localhost:9090

Node Exporter â†’ http://localhost:9100/metrics

âœ… STEP 7: Setup Grafana Dashboard
Go to http://localhost:3000

Login â†’ admin / admin

Add Prometheus as Data Source

URL: http://localhost:9090

Import Dashboard

Go to "+" â†’ Import

Use Dashboard ID: 1860 â†’ Click "Load"

Select Prometheus â†’ Import

Youâ€™ll now see real-time CPU, memory, and system stats!


Put this into /etc/prometheus/prometheus.yml


- job_name: node
  honor_timestamps: true
  scrape_interval: 15s
  scrape_timeout: 10s
  metrics_path: /metrics
  scheme: http
  follow_redirects: true
  enable_http2: true
  static_configs:
  - targets:
    - localhost:9100
